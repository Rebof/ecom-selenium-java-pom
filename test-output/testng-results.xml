<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-19T22:32:36 EDT" name="Default suite" finished-at="2025-08-19T22:33:25 EDT" duration-ms="49366">
    <groups>
      <group name="validation">
        <method signature="RegistrationTest.registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" name="registrationValidationTest" class="ecom.Tests.RegistrationTest"/>
      </group> <!-- validation -->
    </groups>
    <test started-at="2025-08-19T22:32:36 EDT" name="Default test" finished-at="2025-08-19T22:33:25 EDT" duration-ms="49366">
      <class name="ecom.Tests.RegistrationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:36 EDT" name="launchApplication" finished-at="2025-08-19T22:32:40 EDT" duration-ms="3967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:40 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:32:41 EDT" duration-ms="768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=, lastName=Ronaldo, password=Password123, name=First Name Required, mobile=9876543210, checkbox=true, confirmPassword=Password123, expectedError=//div[contains(text(),'*First Name is required')], email=cr7@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:41 EDT" name="tearDown" finished-at="2025-08-19T22:32:41 EDT" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:41 EDT" name="launchApplication" finished-at="2025-08-19T22:32:44 EDT" duration-ms="3510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:44 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:32:45 EDT" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Lionel, lastName=Messi, password=Password123, name=Email Required, mobile=9876543210, checkbox=true, confirmPassword=Password123, expectedError=//div[contains(text(),'*Email is required')], email=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:45 EDT" name="tearDown" finished-at="2025-08-19T22:32:45 EDT" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:45 EDT" name="launchApplication" finished-at="2025-08-19T22:32:49 EDT" duration-ms="3470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:49 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:32:49 EDT" duration-ms="721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Neymar, lastName=Junior, password=Password123, name=Phone Number Required, mobile=, checkbox=true, confirmPassword=Password123, expectedError=//div[contains(text(),'*Phone Number is required')], email=neymar@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:49 EDT" name="tearDown" finished-at="2025-08-19T22:32:49 EDT" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:49 EDT" name="launchApplication" finished-at="2025-08-19T22:32:51 EDT" duration-ms="1912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:51 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:32:52 EDT" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Kylian, lastName=MbappÃ©, password=, name=Password Required, mobile=9876543210, checkbox=true, confirmPassword=Password123, expectedError=//div[contains(text(),'*Password is required')], email=mbappe@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:52 EDT" name="tearDown" finished-at="2025-08-19T22:32:52 EDT" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:52 EDT" name="launchApplication" finished-at="2025-08-19T22:32:56 EDT" duration-ms="3501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:56 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:32:56 EDT" duration-ms="766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Mohamed, lastName=Salah, password=Password123, name=Confirm Password Required, mobile=9876543210, checkbox=true, confirmPassword=, expectedError=//div[contains(text(),'Confirm Password is required')], email=salah@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:56 EDT" name="tearDown" finished-at="2025-08-19T22:32:56 EDT" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:32:56 EDT" name="launchApplication" finished-at="2025-08-19T22:33:00 EDT" duration-ms="3408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:00 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:33:01 EDT" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Goku, lastName=Son, password=Password123, name=Checkbox Not Selected, mobile=9876543210, checkbox=false, confirmPassword=Password123, expectedError=//div[contains(text(),'*Please check above checkbox')], email=goku@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:01 EDT" name="tearDown" finished-at="2025-08-19T22:33:01 EDT" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:01 EDT" name="launchApplication" finished-at="2025-08-19T22:33:04 EDT" duration-ms="3785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:04 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:33:05 EDT" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Vegeta, lastName=Prince, password=Password123, name=Password and Confirm Password Mismatch, mobile=9876543210, checkbox=true, confirmPassword=Password999, expectedError=//div[contains(text(),'Password and Confirm Password must match')], email=vegeta@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:05 EDT" name="tearDown" finished-at="2025-08-19T22:33:05 EDT" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:05 EDT" name="launchApplication" finished-at="2025-08-19T22:33:07 EDT" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:07 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:33:08 EDT" duration-ms="703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Piccolo, lastName=Namek, password=Password123, name=Phone Number With Letters, mobile=98ABCD1234, checkbox=true, confirmPassword=Password123, expectedError=//div[normalize-space()='*only numbers is allowed'], email=piccolo@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:08 EDT" name="tearDown" finished-at="2025-08-19T22:33:08 EDT" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:08 EDT" name="launchApplication" finished-at="2025-08-19T22:33:10 EDT" duration-ms="1896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:10 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:33:11 EDT" duration-ms="708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Gohan, lastName=Son, password=Password123, name=Phone Number More Than 10 Digits, mobile=9876543210987, checkbox=true, confirmPassword=Password123, expectedError=//div[normalize-space()='*Phone Number must be 10 digit'], email=gohan@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:11 EDT" name="tearDown" finished-at="2025-08-19T22:33:11 EDT" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:11 EDT" name="launchApplication" finished-at="2025-08-19T22:33:14 EDT" duration-ms="3741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="registrationValidationTest(java.util.HashMap)[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:14 EDT" name="registrationValidationTest" data-provider="registrationData" finished-at="2025-08-19T22:33:25 EDT" duration-ms="10730" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{occupationValue=3: Engineer, firstName=Trunks, lastName=Briefs, password=Password123, name=Extra Test Case, mobile=9876543210, checkbox=true, confirmPassword=Password123, expectedError=//div[contains(text(),'*Some error for demo')], email=trunks@example.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'*Some error for demo')]"}
  (Session info: chrome=139.0.7258.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.33.0', revision: '2c6aaad03a'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.8.0-71-generic', java.version: '21.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f06507183df79f309353a824c9ecad07, findElement {using=xpath, value=//div[contains(text(),'*Some error for demo')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.127, chrome: {chromedriverVersion: 139.0.7258.68 (40ff94600b6e..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34829}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://localhost:34829/devtoo..., se:cdpVersion: 139.0.7258.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f06507183df79f309353a824c9ecad07]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'*Some error for demo')]"}
  (Session info: chrome=139.0.7258.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.33.0', revision: '2c6aaad03a'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.8.0-71-generic', java.version: '21.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f06507183df79f309353a824c9ecad07, findElement {using=xpath, value=//div[contains(text(),'*Some error for demo')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.127, chrome: {chromedriverVersion: 139.0.7258.68 (40ff94600b6e..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34829}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://localhost:34829/devtoo..., se:cdpVersion: 139.0.7258.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f06507183df79f309353a824c9ecad07
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at ecom.Tests.RegistrationTest.registrationValidationTest(RegistrationTest.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ecom.Tests.RegistrationTest@710b18a6]" started-at="2025-08-19T22:33:25 EDT" name="tearDown" finished-at="2025-08-19T22:33:25 EDT" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ecom.Tests.RegistrationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
